{"version":3,"file":"static/js/154.4b9c9856.chunk.js","mappings":"kOAMgB,SAASA,EAAT,GAAyB,IAAVC,EAAS,EAATA,OACpBC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASC,QAAnB,KAG/BC,EAAAA,EAAAA,YAAU,WACHL,EAAMM,OAAS,GAClBC,QAAQC,IAAI,SACZX,EAAOY,KAAK,iBACf,GAAE,CAACT,IAGJ,OAA6BU,EAAAA,EAAAA,UAAS,CAACC,QAAS,KAAhD,eAAOC,EAAP,KAAcC,EAAd,KAmBA,OACI,4BACI,kBAAMC,SAnBd,SAAYC,GAaZ,IAAkBC,EAZdD,EAAME,iBAYQD,EAXLJ,EAAMD,QAYfd,EAAOY,KAAK,SAAU,CAACS,QAASF,IAXhClB,EAASqB,EAAAA,EAAAA,OAAkBP,EAAMD,SACpC,EAeO,WACI,kBAAOS,MAAOR,EAAMD,QAASU,SAfpB,SAACC,GAClB,MAAsBA,EAAEC,OAAjBC,EAAP,EAAOA,KAAMJ,EAAb,EAAaA,MACbP,GAAY,SAAAD,GAAK,yBACVA,GADU,cAEZY,EAAOJ,GAFK,GAIpB,EASgEI,KAAI,UAAaC,YAAW,UAAaC,UAAW,aACzG,mBAAQC,KAAM,SAAd,wBAEJ,uBAAIf,EAAMD,UACTX,EAAM4B,KAAI,SAAAC,GAAI,OAAI,cAAGC,QAAS,kBAAMhC,EAASqB,EAAAA,EAAAA,UAAqBU,EAAKE,IAAzC,EAAZ,SAA4DF,EAAKE,GAAK,IAAMF,EAAKG,SAArF,MAG1B,C","sources":["routes/Feed.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch, useStore } from 'react-redux';\r\nimport allActions from '../redux/actions';\r\nimport { ADD_ELE, TOGGLE_ELE, SET_FILTER, SET_STATE } from \"../redux/actionTypes\";\r\n\r\n\r\n export default function Feed({socket}) {\r\n     const dispatch = useDispatch();\r\n     const store = useSelector(state => state.messages.elements);\r\n\r\n\r\n     useEffect(()=> {\r\n         if(store.length > 3){\r\n         console.log('pohui')}\r\n         socket.emit('api_connection');\r\n     }, [store]);\r\n\r\n\r\n     const [forms, updateForms] = useState({element: ''});\r\n\r\n     function b1(event) {\r\n         event.preventDefault();\r\n         socketGo(forms.element)\r\n         dispatch(allActions.addEle(forms.element));\r\n     }\r\n     const handleChange = (e) => {\r\n         const {name, value} = e.target;\r\n         updateForms(forms => ({\r\n             ...forms,\r\n             [name]: value\r\n         }));\r\n     };\r\n\r\n     function socketGo(data){\r\n         socket.emit('gogogo', {message: data});\r\n     }\r\n\r\n     return (\r\n         <div>\r\n             <form onSubmit={b1}>\r\n                 <input value={forms.element} onChange={handleChange} name={`element`} placeholder={`Element`} inputMode={\"numeric\"}/>\r\n                 <button type={\"submit\"}>Change</button>\r\n             </form>\r\n             <a>{forms.element}</a>\r\n             {store.map(item => <p onClick={() => dispatch(allActions.deleteEle(item.id))}>{item.id + '|' + item.content}</p>)}\r\n         </div>\r\n     )\r\n };\r\n"],"names":["Feed","socket","dispatch","useDispatch","store","useSelector","state","messages","elements","useEffect","length","console","log","emit","useState","element","forms","updateForms","onSubmit","event","data","preventDefault","message","allActions","value","onChange","e","target","name","placeholder","inputMode","type","map","item","onClick","id","content"],"sourceRoot":""}