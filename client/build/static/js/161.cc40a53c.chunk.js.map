{"version":3,"file":"static/js/161.cc40a53c.chunk.js","mappings":"6MAMe,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAA2BA,EAAMC,UAAUH,MAA3C,IAE3B,SAASI,EAAYC,GACjB,IACMC,EADSD,EAAME,OACOC,QAAQ,kBAAmBC,aAAa,eAChD,OAAjBH,IACHV,EAASc,EAAAA,EAAAA,UAAqBJ,IAC9BR,EAAS,SACZ,CACD,OACI,iBAAKa,UAAW,iBAAhB,WACI,gBAAKA,UAAsB,SAAXX,EAAoB,sBAAuB,aAAc,cAAa,OAAcY,QAAS,SAAAP,GAAK,OAAID,EAAYC,EAAhB,EAAlH,0DACA,gBAAKM,UAAsB,WAAXX,EAAsB,sBAAuB,aAAc,cAAa,SAAUY,QAAS,SAAAP,GAAK,OAAID,EAAYC,EAAhB,EAAhH,8FAGX,C","sources":["routes/routeComponents/Feed/FeedFilters.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport {useSelector, useDispatch, useStore} from 'react-redux';\r\nimport {ReduxStoreType} from \"../../../redux/types/reduxStoreTypes\";\r\nimport allActions from '../../../redux/actions/userAction';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport default function FeedFilters(){\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const filter = useSelector((state: ReduxStoreType) => state.feedState.filter);\r\n\r\n    function handleClick(event: React.MouseEvent<HTMLElement>){\r\n        const target = event.target as HTMLElement;\r\n        const targetChoice = target.closest('div.ChatFilter')!.getAttribute(\"data-choice\");\r\n        if(targetChoice === null) return;\r\n        dispatch(allActions.setFilter(targetChoice));\r\n        navigate('/feed');\r\n    }\r\n    return (\r\n        <div className={'ChatAppFilters'}>\r\n            <div className={filter === 'none' ? 'ChatFilter selected': 'ChatFilter'} data-choice={'none'}       onClick={event => handleClick(event)}>Все чаты</div>\r\n            <div className={filter === 'unRead' ? 'ChatFilter selected': 'ChatFilter'} data-choice={'unRead'} onClick={event => handleClick(event)}>Непрочитанные</div>\r\n        </div>\r\n    )\r\n}"],"names":["FeedFilters","dispatch","useDispatch","navigate","useNavigate","filter","useSelector","state","feedState","handleClick","event","targetChoice","target","closest","getAttribute","allActions","className","onClick"],"sourceRoot":""}