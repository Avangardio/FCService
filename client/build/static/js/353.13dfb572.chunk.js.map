{"version":3,"file":"static/js/353.13dfb572.chunk.js","mappings":";yQAWOA,GADS,IAAIC,EAAAA,EACQC,EAAQ,MAA7BF,mBAIDG,GAHSD,EAAQ,OAGRE,EAAAA,EAAAA,IAAG,2BAEZC,GAAmBC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACxBC,GAAmBD,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACxBE,GAAmBF,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACxBG,GAAmBH,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACxBI,GAAmBJ,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACxBK,GAAmBL,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACxBM,GAAmBN,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACxBO,GAAoBP,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACzBQ,GAAcR,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACnBS,GAAOT,EAAAA,EAAAA,OAAK,kBAAK,6BAAL,IAMH,SAASU,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,IADaC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,CAAJ,KACxBD,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,GAApB,KAC7B,GAAsCI,EAAAA,EAAAA,YAAtC,yBAsCA,OApCAC,EAAAA,EAAAA,YAAU,WAGFL,GACJM,IAAMzB,KACD0B,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAASG,KAAKX,KAC1BF,EAASc,EAAAA,EAAAA,SAAoBJ,EAASG,KAAKX,KAC9C,IACAa,OAAM,SAACC,GACJL,QAAQC,IAAII,EACf,GAuBJ,GAAC,CAACd,KAGH,UAAC,KAAD,YACA,SAACV,EAAD,KACA,SAAC,EAAAyB,SAAD,CAAUC,UAAU,wCAApB,UAEI,UAAC,KAAD,YACI,SAAC,KAAD,CAAOC,KAAK,IAAgBC,SAAS,SAAChC,EAAD,OACrC,SAAC,KAAD,CAAO+B,KAAK,SAAgBC,SAAS,SAAC9B,EAAD,OACrC,SAAC,KAAD,CAAO6B,KAAK,OAAgBC,SAAS,SAAC7B,EAAD,OACrC,SAAC,KAAD,CAAO4B,KAAK,QAAgBC,SAAS,SAACtB,EAAD,OACrC,SAAC,KAAD,CAAOqB,KAAK,aAAaC,SAAS,SAACvB,EAAD,OAClC,SAAC,KAAD,CAAOuB,SAAS,SAACxB,EAAD,IAAhB,UACI,SAAC,KAAD,CAAOuB,KAAK,QAASE,OAAK,EAACD,SAAS,SAAC3B,EAAD,CAAMP,OAAUA,SAExD,SAAC,KAAD,CAAOiC,KAAK,gBAAgBC,SAAS,SAAC1B,EAAD,OACrC,SAAC,KAAD,CAAOyB,KAAK,SAAgBC,SAAS,SAACzB,EAAD,aAIpD,oBCtFD2B,EAAOC,QAAU,CAACxC,kBANQ,iBAAO,CAC7ByC,OAAQ,MACRC,IAAK,qCACLC,iBAAiB,EAHK,qBCD1BJ,EAAOC,QAAU,CAAC,OAAQ,QAAS,MAAO,OAAQ,eAAgB,QAAjD","sources":["app.js","components/axiosConfigs/authConfiguration.js","components/pathArray.js"],"sourcesContent":["import React, {Suspense, lazy, useEffect, useState} from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport io from 'socket.io-client';\r\nimport Cookies from \"universal-cookie\";\r\nimport allActions from './redux/actions';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { useSelector, useDispatch, useStore } from 'react-redux';\r\n\r\nconst cookies = new Cookies();\r\nconst {authConfiguration} = require('./components/axiosConfigs/authConfiguration');\r\nlet navArray = require('./components/pathArray')\r\n\r\n\r\nconst socket = io('http://localhost:8080/');\r\n\r\nconst Home             = lazy(()=>  import('./routes/Home'));\r\nconst About            = lazy(()=>  import('./routes/About'));\r\nconst Api              = lazy(()=>  import('./routes/Api'));\r\nconst Navbar           = lazy(()=>  import('./routes/Navbar'));\r\nconst Feed             = lazy(()=>  import('./routes/Feed'));\r\nconst RegistrationPage = lazy(()=>  import('./routes/RegistrationPage'));\r\nconst LoginPage        = lazy(()=>  import('./routes/LoginPage'));\r\nconst ProtectedRoutes   = lazy(()=>  import('./routes/ProtectedRoute'));\r\nconst PageSetup   = lazy(()=>  import('./routes/PageSetup'));\r\nconst Auth = lazy(()=> import('./routes/Auth'));\r\n\r\n/*!!!useEffect(() => {\r\n    document.title = `You clicked ${count} times`;\r\n}, [count]); // Only re-run the effect if count changes\r\n*/\r\nexport default function App () {\r\n    const dispatch = useDispatch();\r\n    const wholeStore = useSelector(state => state);\r\n    const uId = useSelector(state => state.userState.uId);\r\n    const [isConnected, setIsConnected] = useState();\r\n\r\n    useEffect(()=> {\r\n\r\n        // make the API call\r\n        if(!uId){\r\n        axios(authConfiguration())\r\n            .then((response) => {\r\n                console.log(response.data.uId)\r\n                dispatch(allActions.authUser(response.data.uId));\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            });\r\n        }\r\n\r\n        /*console.log('lol');\r\n        console.log(isConnected);\r\n\r\n        socket.on('connect',    () => {\r\n            setIsConnected(true);\r\n            console.log('connected')\r\n        });\r\n\r\n        socket.on('disconnect', () => {\r\n            setIsConnected(false);\r\n            console.log('DISC')\r\n        });\r\n\r\n        socket.on('news', (data) => console.log(data) );\r\n\r\n        return () => {\r\n            socket.off('connect');\r\n            socket.off('disconnect');\r\n            socket.off('news');\r\n        }; */\r\n        },[uId])\r\n\r\n    return (\r\n        <Router>\r\n        <Navbar />\r\n        <Suspense fallback={<div>Loading...</div>}>\r\n\r\n            <Routes>\r\n                <Route path=\"/\"             element={<Home />}                  />\r\n                <Route path=\"/about\"        element={<About />}                 />\r\n                <Route path=\"/api\"          element={<Api />}                   />\r\n                <Route path=\"/auth\"         element={<Auth />}   />\r\n                <Route path=\"/pageSetup\" element={<PageSetup />} />\r\n                <Route element={<ProtectedRoutes />}>\r\n                    <Route path=\"/feed\"  exact element={<Feed socket = {socket}/> }/>\r\n                </Route                         >\r\n                <Route path=\"/registration\" element={<RegistrationPage />}      />\r\n                <Route path=\"/login\"        element={<LoginPage />}             />\r\n            </Routes>\r\n        </Suspense>\r\n    </Router>)\r\n};\r\n","\r\nconst authConfiguration = () => ({\r\n    method: \"get\",\r\n    url: \"http://localhost:8080/account/auth\",\r\n    withCredentials: true,\r\n});\r\n\r\nmodule.exports = {authConfiguration};","module.exports = ['Home', 'About', 'Api', 'Feed', 'Registration', 'Login', `Auth`];"],"names":["authConfiguration","Cookies","require","socket","io","Home","lazy","About","Api","Navbar","Feed","RegistrationPage","LoginPage","ProtectedRoutes","PageSetup","Auth","App","dispatch","useDispatch","uId","useSelector","state","userState","useState","useEffect","axios","then","response","console","log","data","allActions","catch","error","Suspense","fallback","path","element","exact","module","exports","method","url","withCredentials"],"sourceRoot":""}