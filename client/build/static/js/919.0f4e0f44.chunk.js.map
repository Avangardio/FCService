{"version":3,"file":"static/js/919.0f4e0f44.chunk.js","mappings":"uNAKMA,EAASC,EAAQ,MAIR,SAASC,IAEpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAMC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAUH,GAApB,IACvBI,EAAiD,KAA/BN,EAASO,SAASC,MAAM,GAAY,OAASR,EAASO,SAASC,MAAM,GAC7FC,QAAQC,IAAI,eAAgBJ,GAC5B,OAA4BK,EAAAA,EAAAA,UAAST,GAArC,eACA,GADA,WAC+BS,EAAAA,EAAAA,aAA/B,eAAOC,EAAP,KAAiBC,EAAjB,KACIC,EAAQnB,EA0BZ,OAnBAoB,EAAAA,EAAAA,YAAU,WACHb,GACCO,QAAQC,IAAI,QACZI,EAAQnB,EAAOa,MAAM,EAAE,IAEvBM,EAAQnB,EAAOa,MAAM,GAIzBK,EAAWC,EAAME,KAAI,SAAUC,GAK3B,OAHI,gBAAeC,UAAWZ,EAAgBa,gBAAkBF,EAAKE,cAAgB,WAAa,GAAIC,QAAS,WAfvH,IAAqBC,EACjBvB,EAAS,IAAD,OAAgB,UADPuB,EAeoHJ,GAdpG,GAAKI,GAc6E,EAA3G,cAAsIJ,IAA7HA,EAIhB,IACJ,GAAC,CAACf,EAAKI,KAIJ,4BACA,eAAIY,UAAW,SAAf,SACKN,IAEAV,GAAM,cAAGoB,MAAM,SAAT,SAAmB,YAAcpB,KAAW,cAAGoB,MAAM,SAAT,SAAmB,6HAGjF,C","sources":["routes/Navbar.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport {useSelector} from \"react-redux\";\r\nimport userState from \"../redux/reducers/stateReducer\";\r\n\r\nconst routes = require('../components/pathArray')\r\n\r\n//let bar = ['Home', 'About', 'Api', 'Feed', 'Registration', 'Login', `Auth`];\r\n\r\nexport default function Navbar() {\r\n\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const uId = useSelector(state => state.userState.uId);\r\n    const currentLocation = location.pathname.slice(1) === \"\" ? 'home' : location.pathname.slice(1);\r\n    console.log('currentloc: '+ currentLocation)\r\n    const [userId, setUserId] = useState(uId);\r\n    const [navPaths, setNavPath] = useState();\r\n    let routs = routes;\r\n\r\n\r\n    function handleClick(locate){\r\n        navigate(`/${locate === 'Home' ? '' : locate}`);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(uId){\r\n            console.log('here')\r\n            routs = routes.slice(0,4);\r\n        } else {\r\n            routs = routes.slice(4);\r\n        }\r\n       // const path = location.pathname.slice(1) === \"\" ? 'home' : location.pathname.slice(1);\r\n\r\n        setNavPath(routs.map(function (item) {\r\n            let element = (\r\n                <li key={item} className={currentLocation.toLowerCase() === item.toLowerCase() ? 'selected' : ''} onClick={() => handleClick(item)}> {item}\r\n                </li>\r\n            );\r\n            return element;\r\n        }));\r\n    },[uId, currentLocation])\r\n\r\n\r\n    return(\r\n        <div>\r\n        <ol className={'Navbar'}>\r\n            {navPaths}\r\n        </ol>\r\n            {uId ? <p align='center'>{'Welcome: ' + uId}</p> : <p align='center'>{\"ЗДравствуй десперато...\"}</p> }\r\n            </div>\r\n            );\r\n}\r\n\r\n//TODO: попробовать сделать список хуйни и ченить срендерить"],"names":["routes","require","Navbar","navigate","useNavigate","location","useLocation","uId","useSelector","state","userState","currentLocation","pathname","slice","console","log","useState","navPaths","setNavPath","routs","useEffect","map","item","className","toLowerCase","onClick","locate","align"],"sourceRoot":""}